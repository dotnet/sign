<Project Sdk="Microsoft.NET.Sdk">
  <Import Project="$(RepositoryRootDirectory)\SdkTools.props" />

  <PropertyGroup>
    <AssemblyName>sign</AssemblyName>
    <IsPackable>true</IsPackable>
    <IsShipping>true</IsShipping>
    <OutputType>Exe</OutputType>
    <PackageDescription>Sign CLI</PackageDescription>
    <PackageReadmeFile>PACKAGE.md</PackageReadmeFile>
    <PackAsTool>true</PackAsTool>
    <RollForward>Major</RollForward>
    <RootNamespace>Sign.Cli</RootNamespace>
    <SelfContained>false</SelfContained>
    <ToolCommandName>sign</ToolCommandName>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="System.CommandLine" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\Sign.Core\Sign.Core.csproj" />
    <ProjectReference Include="..\Sign.SignatureProviders.CertificateStore\Sign.SignatureProviders.CertificateStore.csproj" />
    <ProjectReference Include="..\Sign.SignatureProviders.KeyVault\Sign.SignatureProviders.KeyVault.csproj" />
    <ProjectReference Include="..\Sign.SignatureProviders.TrustedSigning\Sign.SignatureProviders.TrustedSigning.csproj" />
  </ItemGroup>

  <ItemGroup>
    <InternalsVisibleTo Include="Sign.Cli.Test" />
  </ItemGroup>

  <Target Name="VerifyNuGetPackage" AfterTargets="Pack">
    <PropertyGroup>
      <PowerShellFilePath Condition=" '$(PowerShellFilePath)' == '' ">%WINDIR%\System32\WindowsPowerShell\v1.0\powershell.exe</PowerShellFilePath>
      <ScriptFilePath Condition=" '$(ScriptFilePath)' == '' ">$(RepositoryRootDirectory)\scripts\VerifyNuGetPackage.ps1</ScriptFilePath>
    </PropertyGroup>

    <Exec Command="$(PowerShellFilePath) -NonInteractive -ExecutionPolicy Unrestricted -Command &quot;&amp; { &amp;'$(ScriptFilePath)' '$(ArtifactsShippingPackagesDir)' } &quot;" LogStandardErrorAsError="true" />
  </Target>

  <ItemGroup>
    <Content Include="$(RepositoryRootDirectory)\LICENSE.txt">
      <Pack>true</Pack>
      <PackagePath>\</PackagePath>
    </Content>
    <Content Include="PACKAGE.md">
      <Pack>true</Pack>
      <PackagePath>\</PackagePath>
    </Content>
    <Content Include="$(RepositoryRootDirectory)\THIRD-PARTY-NOTICES.txt">
      <Pack>true</Pack>
      <PackagePath>\</PackagePath>
    </Content>
  </ItemGroup>

  <ItemGroup>
    <Compile Update="AzureKeyVaultResources.Designer.cs">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>AzureKeyVaultResources.resx</DependentUpon>
    </Compile>
    <Compile Update="CertificateStoreResources.Designer.cs">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>CertificateStoreResources.resx</DependentUpon>
    </Compile>
    <Compile Update="Resources.Designer.cs">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <Compile Update="TrustedSigningResources.Designer.cs">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>TrustedSigningResources.resx</DependentUpon>
    </Compile>
  </ItemGroup>

  <ItemGroup>
    <EmbeddedResource Update="AzureKeyVaultResources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>AzureKeyVaultResources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <EmbeddedResource Update="CertificateStoreResources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>CertificateStoreResources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <EmbeddedResource Update="Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <EmbeddedResource Update="TrustedSigningResources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>TrustedSigningResources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
  </ItemGroup>
</Project>
