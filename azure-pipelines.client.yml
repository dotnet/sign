trigger:
  branches:
    include:
      - main
      - rel/*
  paths:
    include:
      - src/SignClient/*
      - .editorconfig
      - azure-pipelines.client.yml
      - version.json
      - scripts/*

pr:
  branches:
    include:
      - main
      - rel/*
  paths:
    include:
      - src/SignClient/*
      - .editorconfig
      - azure-pipelines.client.yml
      - version.json
      - scripts/*

variables: 
  BuildConfiguration: Release
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  TreatWarningsAsErrors: true

stages:
- stage: Build
  jobs:
  - job: Build
    pool:
      vmImage: windows-2022

    steps:
    - task: UseDotNet@2
      inputs:
        version: 6.x

    - task: DotNetCoreCLI@2
      inputs:
        command: pack
        packagesToPack: src/SignClient/SignClient.csproj
        packDirectory: $(Build.ArtifactStagingDirectory)\Client
        configuration: $(BuildConfiguration)
      displayName: Build Client

    - publish: $(Build.ArtifactStagingDirectory)\Client
      displayName: Publish build packages
      artifact: BuildPackages

    - publish: scripts
      displayName: Publish signing config
      artifact: config      

- stage: CodeSign
  condition: and(succeeded('Build'), not(eq(variables['build.reason'], 'PullRequest')))
  jobs:
  - deployment: CodeSign
    displayName: Code Signing
    pool:
      vmImage: windows-latest    
    environment: Code Sign - CI
    variables:
    - group: Sign Client Credentials
    strategy:
      runOnce:
        deploy:
          steps: 
          - task: DotNetCoreCLI@2
            inputs:
              command: custom
              custom: tool
              arguments: install --tool-path . SignClient
            displayName: Install SignTool tool

          - pwsh: |
              .\SignClient "Sign" `
              --baseDirectory "$(Pipeline.Workspace)\BuildPackages" `
              --input "**/*.nupkg" `
              --config "$(Pipeline.Workspace)\config\appsettings.json" `
              --filelist "$(Pipeline.Workspace)\config\filelist.txt" `
              --user "$(SignClientUser)" `
              --secret "$(SignClientSecret)" `
              --name "SignClient" `
              --description "SignClient" `
              --descriptionUrl "https://github.com/dotnet/SignService"
            displayName: Sign packages
              
          - publish: $(Pipeline.Workspace)/BuildPackages
            displayName: Publish Signed Packages
            artifact: SignClient
