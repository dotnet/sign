{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "webSiteName": {
      "type": "string",
      "minLength": 1,
      "maxLength": 16,
      "metadata": {
        "description": "Describes the name of the new website"
      }
    },
    "skuName": {
      "type": "string",
      "defaultValue": "B1",
      "allowedValues": [
        "B1",
        "B2",
        "B3",
        "S1",
        "S2",
        "S3",
        "P1",
        "P2",
        "P3",
        "P1v2",
        "P2v2",
        "P3v2"
      ],
      "metadata": {
        "description": "Describes plan's pricing tier and capacity. Check details at https://azure.microsoft.com/en-us/pricing/details/app-service/"
      }
    },
    "skuCapacity": {
      "type": "int",
      "defaultValue": 1,
      "minValue": 1,
      "metadata": {
        "description": "Describes plan's instance count"
      }
    },
    "keyVaultSku": {
      "type": "string",
      "defaultValue": "Standard",
      "allowedValues": [
        "Standard",
        "Premium"
      ],
      "metadata": {
        "description": "SKU for the key vault"
      }

    },
    "applicationClientId": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Client Id (applicationId) of the Azure AD application created for the Sign Service"
      }
    },
    "applicationAudience": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Audience of the Azure AD application created for the Sign Service"
      }
    },
    "applicationClientSecret": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Client Secret (Key) of the Azure AD application created for the Sign Service"
      }
    },
    "keyVaultsResourceGroup": {
      "type": "string",
      "defaultValue": "SignService-KeyVaults",
      "metadata": {
        "description": "Name of the resource group where KeyVaults will be created"
      }
    }
  },
  "variables": {
    "appInsightsName": "[parameters('webSiteName')]",
    "hostingPlanName": "[concat(parameters('webSiteName'), '-asp-', uniqueString(subscription().subscriptionId))]",
    "keyVaultName": "[concat(parameters('webSiteName'), 'kv', substring(uniqueString(subscription().subscriptionId), 0, 5))]"
  },
  "resources": [
    {
      "apiVersion": "2015-08-01",
      "name": "[variables('hostingPlanName')]",
      "type": "Microsoft.Web/serverfarms",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "HostingPlan"
      },
      "sku": {
        "name": "[parameters('skuName')]",
        "capacity": "[parameters('skuCapacity')]"
      },
      "properties": {
        "name": "[variables('hostingPlanName')]"
      }
    },
    {
      "apiVersion": "2015-08-01",
      "name": "[parameters('webSiteName')]",
      "type": "Microsoft.Web/sites",
      "location": "[resourceGroup().location]",
      "identity": {
        "type": "SystemAssigned"
      },
      "tags": {
        "[concat('hidden-related:', resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', variables('hostingPlanName'))]": "Resource",
        "displayName": "Website"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms/', variables('hostingPlanName'))]",
        "[resourceId('microsoft.insights/components/', variables('appInsightsName'))]"
      ],
      "properties": {
        "name": "[parameters('webSiteName')]",
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "httpsOnly": true
      },
      "resources": [
        {
          "apiVersion": "2015-08-01",
          "name": "appsettings",
          "type": "config",
          "dependsOn": [
            "[resourceId('Microsoft.Web/Sites', parameters('webSiteName'))]"
          ],
          "properties": {
            "APPINSIGHTS_INSTRUMENTATIONKEY": "[reference(concat('microsoft.insights/components/', variables('appInsightsName'))).InstrumentationKey]",
            "APPINSIGHTS_PORTALINFO": "ASP.NETCORE",
            "ASPNETCORE_HOSTINGSTARTUP__KEYVAULT__CONFIGURATIONVAULT": "[concat('https://', variables('keyVaultName'), '.vault.azure.net')]",
            "ASPNETCORE_HOSTINGSTARTUP__KEYVAULT__CONFIGURATIONENABLED": "true",
            "WEBSITE_DISABLE_MSI": "false"

          }
        },
        {
          "apiVersion": "2015-08-01",
          "name": "web",
          "type": "config",
          "dependsOn": [
            "[resourceId('Microsoft.Web/Sites', parameters('webSiteName'))]"
          ],
          "properties": {
            "nodeVersion": "",
            "phpVersion": "",
            "pythonVersion": "",
            "javaVersion": null,
            "http20Enabled": true,
            "minTlsVersion": "1.2",
            "ftpsState": "Disabled"

          }
        },
        {
          "apiVersion": "2015-08-01",
          "name": "Microsoft.AspNetCore.AzureAppServices.SiteExtension",
          "type": "siteextensions",
          "dependsOn": [
            "[resourceId('Microsoft.Web/Sites', parameters('webSiteName'))]"
          ],
          "properties": {
          }
        }
      ]
    },
    {
      "apiVersion": "2014-04-01",
      "name": "[variables('appInsightsName')]",
      "type": "Microsoft.Insights/components",
      "location": "East US",
      "tags": {
        "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/sites/', parameters('webSiteName'))]": "Resource",
        "displayName": "AppInsightsComponent"
      },
      "properties": {
        "applicationId": "[variables('appInsightsName')]"
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults",
      "name": "[variables('keyVaultName')]",
      "apiVersion": "2015-06-01",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/Sites', parameters('webSiteName'))]"
      ],
      "tags": {
        "displayName": "KeyVault"
      },
      "properties": {
        "tenantId": "[subscription().tenantId]",
        "accessPolicies": [
          {
            "tenantId": "[subscription().tenantId]",
            "objectId": "[reference(concat('Microsoft.Web/sites/', parameters('webSiteName')), '2015-08-01', 'full').identity.principalId]",
            "permissions": {
              "secrets": [ "get", "list" ]
            }
          }
        ],
        "sku": {
          "name": "[parameters('keyVaultSku')]",
          "family": "A"
        }
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "name": "[concat(variables('keyVaultName'), '/Admin--ResourceGroup')]",
      "apiVersion": "2015-06-01",
      "properties": {
        "value": "[parameters('keyVaultsResourceGroup')]"
      },
      "dependsOn": [
        "[concat('Microsoft.KeyVault/vaults/', variables('keyVaultName'))]"
      ]
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "name": "[concat(variables('keyVaultName'), '/Admin--SubscriptionId')]",
      "apiVersion": "2015-06-01",
      "properties": {
        "value": "[subscription().subscriptionId]"
      },
      "dependsOn": [
        "[concat('Microsoft.KeyVault/vaults/', variables('keyVaultName'))]"
      ]
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "name": "[concat(variables('keyVaultName'), '/AzureAd--Audience')]",
      "apiVersion": "2015-06-01",
      "properties": {
        "value": "[parameters('applicationAudience')]"
      },
      "dependsOn": [
        "[concat('Microsoft.KeyVault/vaults/', variables('keyVaultName'))]"
      ]
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "name": "[concat(variables('keyVaultName'), '/AzureAd--ClientId')]",
      "apiVersion": "2015-06-01",
      "properties": {
        "value": "[parameters('applicationClientId')]"
      },
      "dependsOn": [
        "[concat('Microsoft.KeyVault/vaults/', variables('keyVaultName'))]"
      ]
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "name": "[concat(variables('keyVaultName'), '/AzureAd--ClientSecret')]",
      "apiVersion": "2015-06-01",
      "properties": {
        "value": "[parameters('applicationClientSecret')]"
      },
      "dependsOn": [
        "[concat('Microsoft.KeyVault/vaults/', variables('keyVaultName'))]"
      ]
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "name": "[concat(variables('keyVaultName'), '/AzureAd--TenantId')]",
      "apiVersion": "2015-06-01",
      "properties": {
        "value": "[subscription().tenantId]"
      },
      "dependsOn": [
        "[concat('Microsoft.KeyVault/vaults/', variables('keyVaultName'))]"
      ]
    }
  ],
  "outputs": {
  }
}
